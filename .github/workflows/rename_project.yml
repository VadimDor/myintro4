name: Rename the project from template

# workflow_dispatch allows you to run this workflow manually from the Actions tab
on: [push, workflow_dispatch]

permissions: write-all

jobs:
  rename-project:
    if: ${{ !contains (github.repository, '/python-project-template') }}
    runs-on: ubuntu-latest
    permissions: write-all    
    steps:
      - uses: actions/checkout@v4
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          
      - run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}' | tr '-' '_' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        shell: bash

      - run: echo "REPOSITORY_URLNAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - run: echo "REPOSITORY_OWNER=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
        shell: bash
        
      - name: Is this still a template
        id: is_template
        run: echo "::set-output name=is_template::$(ls .github/template.yml &> /dev/null && echo true || echo false)"

      - name: Rename the project
        if: steps.is_template.outputs.is_template == 'true'
        run: |
          echo "Renaming the project with -a(author) ${{ env.REPOSITORY_OWNER }} -n(name) ${{ env.REPOSITORY_NAME }} -u(urlname) ${{ env.REPOSITORY_URLNAME }}"
          .github/rename_project.sh -a ${{ env.REPOSITORY_OWNER }} -n ${{ env.REPOSITORY_NAME }} -u ${{ env.REPOSITORY_URLNAME }} -d "Intoduction page of ${{ env.REPOSITORY_OWNER }} with github statictic"

      - name: Test gh api
        run: |
          #echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          #gh api repos/${{ GITHUB.REPOSITORY }}/issues  --jq '.[].title'
          #gh api -X GET /repos/${{ GITHUB.REPOSITORY }}/docs --jq='.names'
          #gh api \
          #--method PUT \
          #-H "Accept: application/vnd.github+json" \
          #-H "X-GitHub-Api-Version: 2022-11-28" \
          #/repos/${{ GITHUB.REPOSITORY }}/actions/secrets/METRICS_TOKEN1 \
          #-f encrypted_value='c2VjcmV0' \
          #-f key_id='012345678912345678'
        
      - name: Prepare gist as metrics holder
        #if: steps.is_template.outputs.is_template == 'true'
        env:
          GISTTOKEN: ${{ secrets.GIST_SECRET }}
        run: |
          echo "Preparing gist with -a(author) ${{ env.REPOSITORY_OWNER }} -n(name) ${{ env.REPOSITORY_NAME }} -u(urlname) ${{ env.REPOSITORY_URLNAME }}"
          chmod u+x .github/prepare_gist_metrics.sh
          .github/prepare_gist_metrics.sh -a ${{ env.REPOSITORY_OWNER }} -n ${{ env.REPOSITORY_NAME }} -u ${{ env.REPOSITORY_URLNAME }} -d "Awesome ${{ env.REPOSITORY_NAME }} created by ${{ env.REPOSITORY_OWNER }}"
                          
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "âœ… Ready to code."
          # commit_options: '--amend --no-edit'
          push_options: --force
